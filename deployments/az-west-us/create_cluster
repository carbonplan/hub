#!/bin/bash
# This script creates the Kubernetes cluster on Azure. It requires shyaml
# (https://github.com/0k/shyaml) to parse the secrets file.

set -e
set -x

# name things
CLUSTERNAME="hub"
RESOURCEGROUP="pangeo-west-us-2"
NODERESOURCEGROUP="hub-nodes"
VNET="vnet"
SUBNET="hub"

# read secrets
SECRETSFILE="secrets/azure-auth.yaml"
APPID=`shyaml get-value appId < ${SECRETSFILE}`
PASSWORD=`shyaml get-value password < ${SECRETSFILE}`
ACCOUNT=`shyaml get-value account < ${SECRETSFILE}`
SUBSCRIPTION=`shyaml get-value subscription < ${SECRETSFILE}`

# check login
CURRENTACCOUNT=`az account show --query user.name --output tsv`
if [ ${CURRENTACCOUNT} != ${ACCOUNT} ]; then
  echo "Login to ${ACCOUNT}."
  exit
else
  echo "Logged in to ${ACCOUNT}. Continuing ..."
fi

# create service principal
# az ad sp create-for-rbac --name "hubploy-ci" --role contributor \
#                         --scopes /subscriptions/${SUBSCRIPTION}/resourceGroups/${RESOURCEGROUP} \
#                         --sdk-auth

# check if cluster already exists
echo "Checking if cluster exists ..."
CLUSTER=`az aks list --query [*].[name] --output table | grep "${CLUSTERNAME}" | cat`
if [[ ${CLUSTER} == ${CLUSTERNAME} ]]; then
  echo "Cluster exists. Not creating."
else
  # create resource group
  # az group create -l westus2 -n ${RESOURCEGROUP}
  # create cluster
  echo "Creating cluster... "
  az aks create \
    --name ${CLUSTERNAME} \
    --resource-group ${RESOURCEGROUP} \
    --location "westus2" \
    --kubernetes-version "1.16.10" \
    --node-count 3 \
    --node-osdisk-size 30 \
    --node-vm-size "Standard_D2s_v3" \
    --no-ssh-key \
    --network-plugin "azure" \
    --skip-subnet-role-assignment \
    --service-principal "${APPID}" \
    --client-secret "${PASSWORD}" \
    --enable-cluster-autoscaler \
    --min-count 3 \
    --max-count 20 \
    --max-pods 64 \
    --verbose
fi
    # --node-resource-group ${NODERESOURCEGROUP} \
    # --vnet-subnet-id "/subscriptions/${SUBSCRIPTION}/resourceGroups/${RESOURCEGROUP}/providers/Microsoft.Network/virtualNetworks/${VNET}/subnets/${SUBNET}" \
    # --service-cidr "10.1.0.0/16" \
    # --dns-service-ip "10.1.1.1" \
    # --docker-bridge-address "10.2.0.1/16" \
    # --enable-vmss \

# get credentials for cluster
echo "Getting credentials ..."
az aks get-credentials --name ${CLUSTERNAME} --resource-group ${RESOURCEGROUP} --overwrite-existing

# add pangeo-service-principal role assignment
echo "Adding role assignment ..."
az role assignment create --role "Contributor" --assignee "${APPID}" --scope "/subscriptions/${SUBSCRIPTION}/resourceGroups/${RESOURCEGROUP}/providers/Microsoft.ContainerService/managedClusters/${CLUSTERNAME}"

# delete dashboard
kubectl --namespace=kube-system delete deployment kubernetes-dashboard

az aks nodepool add \
    --resource-group $RESOURCEGROUP \
    --cluster-name $CLUSTERNAME \
    --name userpool \
    --node-count 0 \
    --enable-cluster-autoscaler \
    --min-count 0 \
    --max-count 20 \
    --max-pods 64 \
    --node-vm-size Standard_D13_v2
    --verbose

az aks nodepool add \
    --resource-group $RESOURCEGROUP \
    --cluster-name $CLUSTERNAME \
    --kubernetes-version 1.16.15 \
    --name bigmem2 \
    --node-count 0 \
    --enable-cluster-autoscaler \
    --min-count 0 \
    --max-count 4 \
    --max-pods 64 \
    --node-vm-size Standard_D64s_v4 \
    --verbose

az aks nodepool add \
    --resource-group $RESOURCEGROUP \
    --cluster-name $CLUSTERNAME \
    --kubernetes-version 1.16.15 \
    --name dask-workers \
    --node-count 0 \
    --priority Spot \
    --eviction-policy Delete \
    --spot-max-price -1 \
    --enable-cluster-autoscaler \
    --min-count 0 \
    --max-count 4 \
    --max-pods 64 \
    --node-vm-size Standard_D15_v2 \
    --verbose
